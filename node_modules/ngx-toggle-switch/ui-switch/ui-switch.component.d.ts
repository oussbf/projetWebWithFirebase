import { EventEmitter } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
export declare class UiSwitchComponent implements ControlValueAccessor {
    private _checked;
    private _disabled;
    private _reverse;
    size: string;
    change: EventEmitter<boolean>;
    color: string;
    switchOffColor: string;
    switchColor: string;
    defaultBgColor: string;
    defaultBoColor: string;
    labelOn: string;
    labelOff: string;
    checked: boolean;
    disabled: boolean;
    reverse: boolean;
    getColor(flag?: string): string;
    onToggle(): void;
    writeValue(obj: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState(isDisabled: boolean): void;
    private onTouchedCallback;
    private onChangeCallback;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<UiSwitchComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<UiSwitchComponent, "ui-switch", never, {
    "size": "size";
    "color": "color";
    "switchOffColor": "switchOffColor";
    "switchColor": "switchColor";
    "defaultBgColor": "defaultBgColor";
    "defaultBoColor": "defaultBoColor";
    "labelOn": "labelOn";
    "labelOff": "labelOff";
    "checked": "checked";
    "disabled": "disabled";
    "reverse": "reverse";
}, {
    "change": "change";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidWktc3dpdGNoLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJ1aS1zd2l0Y2guY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBd0JBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb250cm9sVmFsdWVBY2Nlc3NvciB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFVpU3dpdGNoQ29tcG9uZW50IGltcGxlbWVudHMgQ29udHJvbFZhbHVlQWNjZXNzb3Ige1xuICAgIHByaXZhdGUgX2NoZWNrZWQ7XG4gICAgcHJpdmF0ZSBfZGlzYWJsZWQ7XG4gICAgcHJpdmF0ZSBfcmV2ZXJzZTtcbiAgICBzaXplOiBzdHJpbmc7XG4gICAgY2hhbmdlOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj47XG4gICAgY29sb3I6IHN0cmluZztcbiAgICBzd2l0Y2hPZmZDb2xvcjogc3RyaW5nO1xuICAgIHN3aXRjaENvbG9yOiBzdHJpbmc7XG4gICAgZGVmYXVsdEJnQ29sb3I6IHN0cmluZztcbiAgICBkZWZhdWx0Qm9Db2xvcjogc3RyaW5nO1xuICAgIGxhYmVsT246IHN0cmluZztcbiAgICBsYWJlbE9mZjogc3RyaW5nO1xuICAgIGNoZWNrZWQ6IGJvb2xlYW47XG4gICAgZGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgcmV2ZXJzZTogYm9vbGVhbjtcbiAgICBnZXRDb2xvcihmbGFnPzogc3RyaW5nKTogc3RyaW5nO1xuICAgIG9uVG9nZ2xlKCk6IHZvaWQ7XG4gICAgd3JpdGVWYWx1ZShvYmo6IGFueSk6IHZvaWQ7XG4gICAgcmVnaXN0ZXJPbkNoYW5nZShmbjogYW55KTogdm9pZDtcbiAgICByZWdpc3Rlck9uVG91Y2hlZChmbjogYW55KTogdm9pZDtcbiAgICBzZXREaXNhYmxlZFN0YXRlKGlzRGlzYWJsZWQ6IGJvb2xlYW4pOiB2b2lkO1xuICAgIHByaXZhdGUgb25Ub3VjaGVkQ2FsbGJhY2s7XG4gICAgcHJpdmF0ZSBvbkNoYW5nZUNhbGxiYWNrO1xufVxuIl19